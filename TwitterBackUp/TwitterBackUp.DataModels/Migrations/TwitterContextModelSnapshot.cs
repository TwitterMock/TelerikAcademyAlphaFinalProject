// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TwitterBackUp.DataModels.Models;

namespace TwitterBackUp.DataModels.Migrations
{
    [DbContext(typeof(TwitterContext))]
    partial class TwitterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TwitterBackUp.DomainModels.Tweet", b =>
                {
                    b.Property<string>("TweetId");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<int?>("RetweetCount");

                    b.Property<int>("TwitterAccountId");

                    b.Property<string>("TwitterId")
                        .IsRequired();

                    b.Property<string>("Url");

                    b.HasKey("TweetId");

                    b.HasIndex("TwitterId");

                    b.ToTable("Tweets");
                });

            modelBuilder.Entity("TwitterBackUp.DomainModels.Twitter", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<int?>("FollowersCount");

                    b.Property<int?>("FriendsCount");

                    b.Property<string>("ProfileBackgroundImageUrl");

                    b.Property<string>("ProfileImageUrl");

                    b.Property<string>("ScreenName")
                        .IsRequired()
                        .HasMaxLength(125);

                    b.Property<string>("Url");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(125);

                    b.HasKey("UserId");

                    b.ToTable("Twitters");
                });

            modelBuilder.Entity("TwitterBackUp.DomainModels.Tweet", b =>
                {
                    b.HasOne("TwitterBackUp.DomainModels.Twitter", "Twitter")
                        .WithMany("Tweets")
                        .HasForeignKey("TwitterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
